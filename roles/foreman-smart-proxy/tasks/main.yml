---
- debug:
    msg: "Installing Foreman Smart Proxy on {{ inventory_hostname }}"

- name: Update Host File
  lineinfile:
    path: "/etc/hosts"
    regexp: "^{{ hostvars[item].ipaddress }}"
    line: "{{ hostvars[item].ipaddress }} {{ item }}"
    state: present
  with_items: "{{ groups['all'] }}"

- name: Update Host File - include media server name resolution
  lineinfile:
    path: "/etc/hosts"
    regexp: "^{{ hostvars[item].media_server }} media-server"
    line: "{{ hostvars[item].media_server }} media-server"
    state: present
  with_items: "{{ groups['all'] }}"
  when: media_server_local_resolution and item == inventory_hostname and media_server_enabled

- name: Update Host File - include smart-proxy  name resolution
  lineinfile:
    path: "/etc/hosts"
    regexp: "^{{ hostvars[item].media_server }} smart-proxy"
    line: "{{ hostvars[item].media_server }} smart-proxy"
    state: present
  with_items: "{{ groups['all'] }}"
  when: item == inventory_hostname and media_server_enabled

- name: Set Hostname
  shell: "hostnamectl set-hostname {{ inventory_hostname }}"
  args:
    executable: /bin/bash

- name: Install puppet repo
  yum:
    name: "https://yum.puppetlabs.com/puppet{{ puppet_version }}/puppet{{ puppet_version }}-release-el-7.noarch.rpm"
    state: present
    validate_certs: no
  when: inventory_hostname != foreman_host # we assume repos are already insalled on proxy if also a foreman_host

- name: Install foreman repo
  yum:
    name: "https://yum.theforeman.org/releases/{{ foreman_version }}/el7/x86_64/foreman-release.rpm"
    state: present
    validate_certs: no
  when: inventory_hostname != foreman_host # we assume repos are already insalled on proxy if also a foreman_host

- name: Add other repos
  rhsm_repository:
    name: "{{ item }}"
  with_list: "{{ yum_repos }}"
  when: inventory_hostname != foreman_host # we assume repos are already insalled on proxy if also a foreman_host

- name: Update yum cache and install system updates
  yum:
    name: "*"
    state: latest
    update_cache: yes
  when: ansible_distribution == "CentOS"

- name: Stop firewalld
  service:
    name: firewalld
    state: stopped
  when: disable_firewall

- name: Disable firewalld
  service:
     name: firewalld
     enabled: no
  when: disable_firewall

- name: Install foreman-installer
  yum:
    name: foreman-installer
    state: present
    validate_certs: no

- name: Install dnsmasq
  yum:
    name: dnsmasq
    state: present
    validate_certs: no

- name: Start and enable dnsmasq
  service:
    name: dnsmasq
    state: started
    enabled: yes

- name: Create puppet directories since when they're created by foreman-installer, they're permissioned wrongly
  file:
    path: "{{ item }}"
    state: directory
    owner: puppet
    group: foreman
    recurse: yes
  with_list:
    - /etc/puppetlabs/puppet/ssl/private_keys

- name: adding foreman-proxy to foreman group
  user:
    name: foreman-proxy
    groups: foreman
    append: yes


- name: Installing proxy fails unless permissioned to foreman, and foreman-installer changes wrongly itself
  ansible.builtin.command: watch -n 1 chown -R puppet:foreman /etc/puppetlabs/puppet/ssl/private_keys/
  async: 120
  poll: 0
  retries: 100
  delay: 2

- name: Install foreman smart proxy
  shell: >
        foreman-installer
        --no-enable-foreman
        --no-enable-foreman-cli
        --no-enable-foreman-plugin-bootdisk
        --no-enable-foreman-plugin-setup
        --enable-puppet
        --puppet-server-ca=false
        --puppet-server=true
        --puppet-server-foreman-url=https://{{ foreman_host }}
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-puppetca=false
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false
  args:
    executable: /bin/bash
  when: inventory_hostname !=  foreman_host

- name: Install foreman smart proxy - Same Host
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-puppetca=false
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false
        --verbose-log-level
  args:
    executable: /bin/bash
  when: inventory_hostname ==  foreman_host

- name: Copy systemd file containing pre command to permission private_keys dir correctly
  ansible.builtin.copy:
    src: foreman-proxy.service
    dest: /usr/lib/systemd/system/foreman-proxy.service
    owner: root
    group: root
    mode: '0644'

- name: Enable foreman-proxy service
  ansible.builtin.systemd:
    name: foreman-proxy
    daemon_reload: yes
    enabled: yes
    masked: no

- name: Install proxy-tftp
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-httpboot true
        --foreman-proxy-tftp=true
        --foreman-proxy-tftp-servername={{ dhcp_pxeserver }}
        --foreman-proxy-http=true
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false
        --foreman-proxy-tftp-managed true
  args:
    executable: /bin/bash
  when: proxy_tftp
  notify:
  - Recursively change ownership of a puppet private keys dir

- name: Update Host File
  lineinfile:
    path: /etc/dhcp/dhcpd.conf
    regexp: "^{{ hostvars[item].ipaddress }}"
    line: "{{ hostvars[item].ipaddress }} {{ item }}"
    state: present
  with_items: "{{ groups['all'] }}"
  when: proxy_dhcp

- name: Add single-host subnet to DHCP configuration for proxy, otherwise isc-dhcp-server service fails to start
  blockinfile:
    path: /etc/dhcp/dhcpd.conf
    block: |
      subnet "{{ ipaddress }}" netmask 255.255.255.255 {}"

- name: Create /etc/dhcp/dhcpd.conf if it doesn't exist
  ansible.builtin.file:
    path: /etc/dhcp/dhcpd.conf
    state: touch
    owner: root
    group: foreman-proxy
  when: proxy_dhcp

- name: Add single-host subnet to DHCP configuration for proxy, otherwise isc-dhcp-server service fails to start
  ansible.builtin.shell: watch -n 2 'grep -qF subnet\ {{ ipaddress }} /etc/dhcp/dhcpd.conf || echo "subnet {{ ipaddress }} netmask 255.255.255.255 {}" | tee -a /etc/dhcp/dhcpd.conf'\
  async: 120
  poll: 0
  retries: 100
  delay: 2
  when: proxy_dhcp

- name: Install proxy-dhcp
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-httpboot true
        --foreman-proxy-dhcp=true
        --foreman-proxy-dhcp-interface={{ dhcp_interface }}
        --foreman-proxy-dhcp-network={{ dhcp_subnets }}
        --foreman-proxy-dhcp-netmask {{ dhcp_netmask }}
        --foreman-proxy-dhcp-range="{{ dhcp_range }}"
        --foreman-proxy-dhcp-gateway="{{ dhcp_gateway }}"
        --foreman-proxy-dhcp-pxeserver="{{ dhcp_pxeserver }}"
        --foreman-proxy-dhcp-nameservers="{{ dhcp_nameservers }}"
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false
        --foreman-proxy-dhcp-network={{ dhcp_subnets }}
  args:
    executable: /bin/bash
  when: proxy_dhcp
  ignore_errors: yes
  notify:
  - Recursively change ownership of a puppet private keys dir

- name: Render dhcpd template file
  ansible.builtin.template:
    src: dhcpd.service.j2
    dest: /usr/lib/systemd/system/dhcpd.service
    owner: root
    group: root
    mode: '0644'

- name: Reload systemd services
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Start service dhcpd, if not started
  ansible.builtin.service:
    name: dhcpd
    state: started
  when: proxy_dhcp

- name: Install proxy-discovery
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-httpboot true
        --enable-foreman-proxy-plugin-discovery
        --foreman-proxy-plugin-discovery-source-url=http://downloads.theforeman.org/discovery/releases/latest/
        --foreman-proxy-plugin-discovery-install-images=true
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false 
  args:
    executable: /bin/bash
  when: proxy_discovery
  notify:
  - Recursively change ownership of a puppet private keys dir

- name: Install proxy-openscap
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-httpboot true
        --enable-foreman-proxy-plugin-openscap
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false 
  args:
    executable: /bin/bash
  when: proxy_openscap
  notify:
  - Recursively change ownership of a puppet private keys dir

- name: Install proxy-remote-execution
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-httpboot true
        --enable-foreman-proxy-plugin-remote-execution-ssh
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false 
  args:
    executable: /bin/bash
  when: proxy_remote_execution
  notify:
  - Recursively change ownership of a puppet private keys dir

- name: Install proxy-ansible
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-httpboot true
        --enable-foreman-proxy-plugin-ansible
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false
  args:
    executable: /bin/bash
  when: proxy_ansible
  notify:
  - Recursively change ownership of a puppet private keys dir

- name: Install proxy-templates
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-httpboot true
        --foreman-proxy-templates=true
        --foreman-proxy-templates-listen-on=both
        --foreman-proxy-template-url="http://{{ inventory_hostname }}:8000"
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false 
  args:
    executable: /bin/bash
  when: proxy_templates
  notify:
  - Recursively change ownership of a puppet private keys dir

- name: Install proxy-bmc
  shell: >
        foreman-installer
        --enable-foreman-proxy
        --foreman-proxy-http=true
        --foreman-proxy-httpboot true
        --foreman-proxy-bmc=true
        --foreman-proxy-foreman-base-url="https://{{ foreman_host }}"
        --foreman-proxy-trusted-hosts={{ foreman_host }}
        --foreman-proxy-register-in-foreman=false
  args:
    executable: /bin/bash
  when: proxy_bmc
  notify:
  - Recursively change ownership of a puppet private keys dir

- name: Restart Foreman Proxy
  service:
    name: foreman-proxy
    state: restarted

- name: Restart dnsmasq
  service:
    name: dnsmasq
    state: restarted

- name: Fix UEFI discovery. Create EFI directory in tftpboot
  file:
    path: /var/lib/tftpboot/EFI/centos/x86_64-efi
    state: directory
  when: proxy_tftp

- name: Fix UEFI discovery. Copy regexp.mod.
  shell: "echo y | cp /usr/lib/grub/x86_64-efi/regexp.mod /var/lib/tftpboot/EFI/centos/x86_64-efi/"
  args:
    executable: /bin/bash
  when: proxy_tftp

- name: Install Web Server for OS images
  yum:
    name: "lighttpd"
    state: present
    validate_certs: no
  when: media_server_enabled

- name: Copy lighttpd.conf to smart proxy (listen on port 81)
  copy:
    src: lighttpd.conf
    dest: /etc/lighttpd/lighttpd.conf
  when: media_server_enabled

- name: Copy dirlisting.conf to smart proxy
  copy:
    src: dirlisting.conf
    dest: /etc/lighttpd/conf.d/dirlisting.conf
  when: media_server_enabled

- name: Start and enable webserver
  service:
    name: lighttpd
    state: restarted
    enabled: yes
  when: media_server_enabled

- name: Create images directory in web root
  file:
    path: /var/www/lighttpd/media
    state: directory
  when: media_server_enabled
